<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Code-Chimp</title><link>https://code-chimp.com/posts/</link><description>Recent content in Posts on Code-Chimp</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>tim@code-chimp.com (Tim Goshinski)</managingEditor><webMaster>tim@code-chimp.com (Tim Goshinski)</webMaster><copyright>Â© 2024 Tim Goshinski</copyright><lastBuildDate>Wed, 02 Nov 2022 00:01:01 -0500</lastBuildDate><atom:link href="https://code-chimp.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Porting a Create React App application to Vite Pt. 2: Unit Testing</title><link>https://code-chimp.com/posts/porting-cra-to-vite-2/</link><pubDate>Wed, 02 Nov 2022 00:01:01 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/porting-cra-to-vite-2/</guid><description>&lt;p>For unit tests we will still be using the excellent &lt;a href="https://testing-library.com/"title="Simple and complete testing utilities that encourage good testing practices" target="_blank">Testing Library&lt;/a>, but we will swap &lt;a href="https://vitest.dev/"title="Vite-native unit test framework" target="_blank">Vitest&lt;/a> in place of
&lt;a href="https://jestjs.io/"title="Delightful JavaScript Testing Framework with a focus on simplicity" target="_blank">Jest&lt;/a>. Vitest promises Jest compatibility without having to duplicate a bunch of configuration to get Jest to
function correctly with a Vite project.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/porting-cra-to-vite-2/featured.png"/></item><item><title>Porting a Create React App application to Vite Pt. 1: Base Project</title><link>https://code-chimp.com/posts/porting-cra-to-vite-1/</link><pubDate>Mon, 31 Oct 2022 00:01:01 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/porting-cra-to-vite-1/</guid><description>As of this writing, Vite promises a faster and more performant developer experience over the tried-and-true Create React App template. This is my experience porting one of my vanilla projects to Vite.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/porting-cra-to-vite-1/featured.png"/></item><item><title>Redux Powered Notification Pipeline Pt. 2: Toasts</title><link>https://code-chimp.com/posts/rx-notification-pipeline-2/</link><pubDate>Sat, 22 Oct 2022 00:01:01 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/rx-notification-pipeline-2/</guid><description>&lt;p>&lt;a href="https://getbootstrap.com/docs/5.2/components/alerts/"title="Provide contextual feedback messages for typical user actions" target="_blank">Alerts&lt;/a> tend to be for &lt;strong>sticky&lt;/strong> messages that I want to ensure the user must actively engage and dismiss.
&lt;a href="https://getbootstrap.com/docs/5.2/components/toasts/"title="Lightweight push notifications" target="_blank">Toasts&lt;/a>, on the other hand, are used for quick, &lt;strong>&lt;em>something-happened&lt;/em>&lt;/strong> style messages - the information is there
for the user to pay attention to, or not, as the message will disappear on its own in a few seconds.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/rx-notification-pipeline-2/featured.png"/></item><item><title>Redux Powered Notification Pipeline Pt. 1: Alerts</title><link>https://code-chimp.com/posts/rx-notification-pipeline-1/</link><pubDate>Wed, 19 Oct 2022 00:01:01 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/rx-notification-pipeline-1/</guid><description>&lt;p>Timely and relevant feedback from application events is critical to maintaining user engagement. Two standard ways of
delivering immediate event feedback are through the use of &lt;a href="https://getbootstrap.com/docs/5.2/components/alerts/"title="Provide contextual feedback messages for typical user actions" target="_blank">alerts&lt;/a> and &lt;a href="https://getbootstrap.com/docs/5.2/components/toasts/"title="Lightweight push notifications" target="_blank">toast messages&lt;/a>. To avoid a lot of
boilerplate markup popping up all over the project I wanted to make it as simple as just dispatching an action such as
&amp;ldquo;&lt;code>dispatch(errorAlert('your call cannot be completed as dialed');&lt;/code>&amp;rdquo; and have the alert appear on the screen. I am using
&lt;a href="https://getbootstrap.com/"title="Powerful front-end toolkit" target="_blank">Bootstrap&lt;/a> for this project but the same concept should translate to other frameworks such as &lt;a href="https://ant.design/docs/react/introduce"title="Popular UI toolkit" target="_blank">Ant Design&lt;/a>,
&lt;a href="https://mui.com/"title="A comprehensive suite of UI tools to help you ship new features faster" target="_blank">Material UI&lt;/a>, or &lt;a href="https://get.foundation/sites.html"title="A wide range of modular and flexible components with an eye toward accessibility" target="_blank">Foundation for Sites&lt;/a>.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/rx-notification-pipeline-1/featured.png"/></item><item><title>Switching to Fetch API</title><link>https://code-chimp.com/posts/switching-to-fetch-api/</link><pubDate>Sun, 16 Oct 2022 19:58:57 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/switching-to-fetch-api/</guid><description>&lt;p>I have finally made the decision to let go of one of my favorite NPM packages, &lt;a href="https://axios-http.com/"title="Promise based HTTP client for the browser and node.js" target="_blank">Axios&lt;/a>, in favor of modern browsers'
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"title="The Fetch API provides an interface for fetching resources" target="_blank">Fetch API&lt;/a>. I want to be clear up front - &lt;strong>I find nothing wrong with Axios&lt;/strong>, it is an extremely high quality
package and a natural progression having used &lt;a href="https://angular.io/"title="Modern web developer&amp;#39;s platform" target="_blank">Angular&lt;/a>&amp;rsquo;s http service that it was originally based upon. I will
likely still rely on Axios in &lt;a href="https://nodejs.org/en/"title="Open-source, cross-platform JavaScript runtime environment" target="_blank">NodeJS&lt;/a> projects, but times change and it now seems a bit redundant in front-end
client applications.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/switching-to-fetch-api/featured.png"/></item><item><title>TypeScript: Organization with `@` Directories</title><link>https://code-chimp.com/posts/organization-with-ts-at-directories/</link><pubDate>Mon, 10 Oct 2022 12:07:06 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/organization-with-ts-at-directories/</guid><description>A set of specialty folders I utilize in TypeScript projects to better organize language specific concepts.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/organization-with-ts-at-directories/featured.png"/></item><item><title>PSA: Cleaning Up package.json</title><link>https://code-chimp.com/posts/psa-clean-up-package-json/</link><pubDate>Fri, 07 Oct 2022 21:22:28 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/psa-clean-up-package-json/</guid><description>&lt;p>I have a minor peeve, maybe it&amp;rsquo;s just me, but I really dislike random chunks of configuration cluttering up my &lt;strong>package.json&lt;/strong>
file. Project generators offered by the likes of &lt;a href="https://nestjs.com/"title="progressive Node.js framework for server-side applications written in a familiar Angular-like syntax" target="_blank">Nest&lt;/a> and &lt;a href="https://create-react-app.dev/"title="Set up a modern web app by running one command" target="_blank">Create React App&lt;/a> still leverage the classic pattern
of embedding third party configuration values in the &lt;strong>package.json&lt;/strong>, which makes it feel cluttered to me. Really I am
just looking to see the dependencies, development dependencies, NPM scripts, and basic project metadata in that file.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/psa-clean-up-package-json/featured.png"/></item><item><title>Hi</title><link>https://code-chimp.com/posts/hi/</link><pubDate>Wed, 05 Oct 2022 20:24:29 -0500</pubDate><author>tim@code-chimp.com (Tim Goshinski)</author><guid>https://code-chimp.com/posts/hi/</guid><description>&lt;p>Just wanted to say &lt;strong>&amp;ldquo;Hi&amp;rdquo;&lt;/strong> and &lt;strong>&amp;ldquo;Thank you&amp;rdquo;&lt;/strong> for stopping by.&lt;/p>
&lt;p>If you are curious I am planning this site as more of place for me to keep notes on new things I learn or figure out in
a more searchable format than a bunch of random projects on one of my dev boxes. Thanks to the
&lt;abbr title="Attention deficit disorder">ADD&lt;/abbr> and the excellent marketing departments of places like
&lt;a href="https://frontendmasters.com/" target="_blank">Frontend Masters&lt;/a>, &lt;a href="https://www.manning.com/" target="_blank">Manning&lt;/a>, and &lt;a href="https://www.udemy.com/" target="_blank">Udemy&lt;/a>
I always have a backlog of shiny new things that I am teaching myself and it has started to become a challenge when
attempting to recall &amp;ldquo;what project did I put that cool piece of code in that did that thing I want to do now?&amp;rdquo;.&lt;/p></description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://code-chimp.com/posts/hi/featured.png"/></item></channel></rss>